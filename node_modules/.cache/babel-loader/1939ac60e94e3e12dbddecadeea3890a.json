{"ast":null,"code":"var _jsxFileName = \"d:\\\\ReactApps\\\\currency-converter\\\\src\\\\components\\\\pages\\\\currency-list.js\";\n// Base\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'; // Redux\n\nimport { connect } from 'react-redux';\nimport { currenciesLoaded, currencySelection } from '../../actions/index'; // Material-UI\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'; // Components\n\nimport CurrencyService from '../../services/currency-service';\nimport CurrencyListItem from '../currency-list-item/currency-list-item';\nimport Spinner from '../spinner/spinner';\nimport './currency-list.css';\n\nclass CurrencyList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.propTypes = {\n      currenciesLoaded: PropTypes.object,\n      currency: PropTypes.object,\n      loading: PropTypes.bool,\n      onGetCurrency: PropTypes.array\n    };\n    this.currencyService = new CurrencyService();\n  }\n\n  componentDidMount() {\n    this.currencyService.getCurrency().then(currency => {\n      this.props.currenciesLoaded(currency);\n    });\n  }\n\n  render() {\n    const {\n      currency,\n      loading,\n      onGetCurrency\n    } = this.props;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrHeaderCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"wrHomeBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      className: \"homeBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"titleCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Currency Codes\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"currencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyListItem, {\n      data: currency,\n      onGetCurrency: onGetCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  currency,\n  loading\n}) => {\n  return {\n    currency,\n    loading\n  };\n};\n\nconst mapStateDispatchToProps = dispatch => {\n  return {\n    currenciesLoaded: currency => {\n      dispatch(currenciesLoaded(currency));\n    },\n    onGetCurrency: (code, value) => {\n      dispatch(currencySelection(code, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapStateDispatchToProps)(CurrencyList);","map":{"version":3,"sources":["d:/ReactApps/currency-converter/src/components/pages/currency-list.js"],"names":["React","Component","Link","PropTypes","connect","currenciesLoaded","currencySelection","ArrowBackIcon","CurrencyService","CurrencyListItem","Spinner","CurrencyList","propTypes","object","currency","loading","bool","onGetCurrency","array","currencyService","componentDidMount","getCurrency","then","props","render","mapStateToProps","mapStateDispatchToProps","dispatch","code","value"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,gBADF,EAEEC,iBAFF,QAGO,qBAHP,C,CAKA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEnCW,SAFmC,GAEvB;AACVP,MAAAA,gBAAgB,EAAEF,SAAS,CAACU,MADlB;AAEVC,MAAAA,QAAQ,EAAEX,SAAS,CAACU,MAFV;AAGVE,MAAAA,OAAO,EAAEZ,SAAS,CAACa,IAHT;AAIVC,MAAAA,aAAa,EAAEd,SAAS,CAACe;AAJf,KAFuB;AAAA,SAgBnCC,eAhBmC,GAgBjB,IAAIX,eAAJ,EAhBiB;AAAA;;AASnCY,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,eAAL,CACGE,WADH,GACiBC,IADjB,CACuBR,QAAD,IAAc;AAChC,WAAKS,KAAL,CAAWlB,gBAAX,CAA4BS,QAA5B;AACD,KAHH;AAID;;AAIDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBE,MAAAA;AAArB,QAAuC,KAAKM,KAAlD;;AAEA,QAAIR,OAAJ,EAAa;AACX,0BACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,CADF,eAQE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAED,QAAxB;AAAkC,MAAA,aAAa,EAAEG,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF;AAcD;;AAzCkC;;AA4CrC,MAAMQ,eAAe,GAAG,CAAC;AAAEX,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AACjD,SAAO;AACLD,IAAAA,QADK;AAELC,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMW,uBAAuB,GAAIC,QAAD,IAAc;AAC5C,SAAO;AACLtB,IAAAA,gBAAgB,EAAGS,QAAD,IAAc;AAC9Ba,MAAAA,QAAQ,CAACtB,gBAAgB,CAACS,QAAD,CAAjB,CAAR;AACD,KAHI;AAKLG,IAAAA,aAAa,EAAE,CAACW,IAAD,EAAOC,KAAP,KAAiB;AAC9BF,MAAAA,QAAQ,CAACrB,iBAAiB,CAACsB,IAAD,EAAOC,KAAP,CAAlB,CAAR;AACD;AAPI,GAAP;AASD,CAVD;;AAYA,eAAezB,OAAO,CAACqB,eAAD,EAAkBC,uBAAlB,CAAP,CAAkDf,YAAlD,CAAf","sourcesContent":["// Base\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n// Redux\nimport { connect } from 'react-redux'\nimport {\n  currenciesLoaded,\n  currencySelection\n} from '../../actions/index'\n\n// Material-UI\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\n// Components\nimport CurrencyService from '../../services/currency-service'\nimport CurrencyListItem from '../currency-list-item/currency-list-item'\nimport Spinner from '../spinner/spinner'\n\nimport './currency-list.css'\n\nclass CurrencyList extends Component {\n\n  propTypes = {\n    currenciesLoaded: PropTypes.object,\n    currency: PropTypes.object,\n    loading: PropTypes.bool,\n    onGetCurrency: PropTypes.array\n  }\n\n  componentDidMount() {\n    this.currencyService\n      .getCurrency().then((currency) => {\n        this.props.currenciesLoaded(currency)\n      })\n  }\n\n  currencyService = new CurrencyService();\n\n  render() {\n    const { currency, loading, onGetCurrency } = this.props\n\n    if (loading) {\n      return (\n        <Spinner />\n      )\n    }\n\n    return (\n      <div className=\"wrCurrencyList\">\n        <div className=\"wrHeaderCurrencyList\">\n          <Link to=\"/\" className=\"wrHomeBtn\">\n            <ArrowBackIcon className=\"homeBtn\" />\n          </Link>\n          <span className=\"titleCurrencyList\">Currency Codes</span>\n        </div>\n\n        <ul className=\"currencyList\">\n          <CurrencyListItem data={currency} onGetCurrency={onGetCurrency} />\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ currency, loading }) => {\n  return {\n    currency,\n    loading\n  }\n}\n\nconst mapStateDispatchToProps = (dispatch) => {\n  return {\n    currenciesLoaded: (currency) => {\n      dispatch(currenciesLoaded(currency))\n    },\n\n    onGetCurrency: (code, value) => {\n      dispatch(currencySelection(code, value))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapStateDispatchToProps)(CurrencyList)\n"]},"metadata":{},"sourceType":"module"}