{"ast":null,"code":"var _jsxFileName = \"d:\\\\ReactApps\\\\currency-converter\\\\src\\\\components\\\\pages\\\\currency-list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CurrencyListItem from '../currency-list-item/currency-list-item';\nimport { currenciesLoaded, currencySelection } from '../../actions/index';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom';\nimport CurrencyService from '../../services/currency-service';\nimport Spinner from '../spinner/spinner';\nimport './currency-list.css';\n\nclass CurrencyList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.currencyService = new CurrencyService();\n  }\n\n  componentDidMount() {\n    const {\n      value,\n      value1,\n      valueRes\n    } = this.props;\n    this.currencyService.getCurrency().then(currency => {\n      this.props.currenciesLoaded(currency);\n    });\n  }\n\n  render() {\n    const {\n      currency,\n      onGetCurrency\n    } = this.props;\n    const data = this.props.currency;\n    const loading = this.props.loading;\n    const currencyCodeDefault = data.length > 0 ? data[0].key : 0;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrHeaderCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"wrHomeBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      className: \"homeBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"titleCurrencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }\n    }, \"Currency Codes\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"currencyList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CurrencyListItem, {\n      data: currency,\n      onGetCurrency: onGetCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  currency,\n  value,\n  value1,\n  valueRes,\n  loading\n}) => {\n  return {\n    currency,\n    value,\n    value1,\n    valueRes,\n    loading\n  };\n};\n\nconst mapStateDispatchToProps = dispatch => {\n  return {\n    currenciesLoaded: currency => {\n      dispatch(currenciesLoaded(currency));\n    },\n    onGetCurrency: (code, value) => {\n      dispatch(currencySelection(code, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapStateDispatchToProps)(CurrencyList);","map":{"version":3,"sources":["d:/ReactApps/currency-converter/src/components/pages/currency-list.js"],"names":["React","Component","connect","CurrencyListItem","currenciesLoaded","currencySelection","ArrowBackIcon","Link","CurrencyService","Spinner","CurrencyList","currencyService","componentDidMount","value","value1","valueRes","props","getCurrency","then","currency","render","onGetCurrency","data","loading","currencyCodeDefault","length","key","mapStateToProps","mapStateDispatchToProps","dispatch","code"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CurrencyListItem from '../currency-list-item/currency-list-item';\nimport {\n  currenciesLoaded,\n  currencySelection\n} from '../../actions/index';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {Link} from 'react-router-dom';\nimport CurrencyService from '../../services/currency-service';\nimport Spinner from '../spinner/spinner';\n\nimport './currency-list.css';\n\nclass CurrencyList extends Component {\n  currencyService = new CurrencyService();\n\t\n\tcomponentDidMount() {\n\t\tconst {value, value1, valueRes} = this.props;\n    \n\t\t\n    \n    this.currencyService\n\t\t\t.getCurrency().then((currency) => {\n\t\t\t\tthis.props.currenciesLoaded(currency);\n\t\t\t});\n\n\t};\n\n\n\t\n\n\trender() {\n    const {currency, onGetCurrency} = this.props;\n    const data = this.props.currency;\n    const loading = this.props.loading;\n    \n    const currencyCodeDefault = data.length > 0 ? data[0].key : 0;\n\n\t\tif(loading) {\n\t\t\treturn (\n\t\t\t\t<Spinner />\n\t\t\t);\n\t\t}\n    \n\t\treturn (\n\t\t\t<div className=\"wrCurrencyList\">\n\t\t\t\t<div className=\"wrHeaderCurrencyList\">\n\t\t\t\t\t<Link to=\"/\" className=\"wrHomeBtn\">\n\t\t\t\t\t\t<ArrowBackIcon className=\"homeBtn\" />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<span className=\"titleCurrencyList\">Currency Codes</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<ul className=\"currencyList\">\n\t\t\t\t\t<CurrencyListItem data={currency} onGetCurrency={onGetCurrency} />\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nconst mapStateToProps = ({currency, value, value1, valueRes, loading}) => {\n\treturn {\n\t\tcurrency,\n\t\tvalue,\n\t\tvalue1,\n\t\tvalueRes,\n    loading\n\t};\n};\n\nconst mapStateDispatchToProps = (dispatch) => {\n\treturn {\n    currenciesLoaded: (currency) => {\n\t\t\tdispatch(currenciesLoaded(currency));\n\t\t},\n    \n\t\tonGetCurrency: (code, value) => {\n\t\t\tdispatch(currencySelection(code, value));\n\t\t}\n\t};\n};\n\nexport default connect(mapStateToProps, mapStateDispatchToProps)(CurrencyList);"]},"metadata":{},"sourceType":"module"}